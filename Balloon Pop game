#ifndef UTILS_H
#define UTILS_H

const int SCREEN_WIDTH = 800;
const int SCREEN_HEIGHT = 800;

double euclideanDistance(int x1, int y1, int x2, int y2){
	double temp = (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2);
	return sqrt(temp);
}

#endif

#ifndef BALLOON_H
#define BALLOON_H
#include "Utils.hpp"


const int NUMBER_OF_BALLOONS = 10;
const int BALLOON_WIDTH = 150;
const int BALLOON_HEIGHT = 150;
const int BALLOON_MAX_SPEED=10;


struct Balloon{
	int rect_x;
	int rect_y;
	int speed;
	int image;

	Balloon(){
		this->resetBalloon();
	}

	void resetBalloon(){
		this->rect_x = rand()%(SCREEN_WIDTH-BALLOON_WIDTH);
		this->rect_y = -BALLOON_HEIGHT;
		this->speed = (rand()%BALLOON_MAX_SPEED ) + 5;
	}

	bool isHit(int mx, int my){
		double distance = euclideanDistance(this->rect_x+BALLOON_WIDTH/2,this->rect_y+BALLOON_HEIGHT/2,mx,my);
		if(distance<=50){
			this->resetBalloon();
			return true;
		}
		return false;
	}
	

	bool isOutOfBound(){
		this->rect_y+=this->speed;
		if(this->rect_y>=SCREEN_HEIGHT){
			this->resetBalloon();
			return true;
		}
		return false;
	}
};



#endif


#include "iGraphics.h"
#include "Utils.hpp"
#include "Balloon.hpp"

//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::Idraw Here::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::://

struct Balloon B[NUMBER_OF_BALLOONS];

int miss=0;
int hit=0;
char scoreText[100];

void iDraw()
{
	iClear();
	//background
	iSetColor(255, 255, 255);
	iFilledRectangle(0,0,SCREEN_WIDTH,SCREEN_HEIGHT);
	//baloon dekhao
	for(int i=0;i<NUMBER_OF_BALLOONS;i++){
		iShowImage(B[i].rect_x, B[i].rect_y, BALLOON_WIDTH, BALLOON_HEIGHT, B[i].image);
	}
	//scoreboard
	iSetColor(0, 0, 0);
	sprintf_s(scoreText, "HIT : %d", hit);
	iText(SCREEN_WIDTH-100,SCREEN_HEIGHT-100,scoreText, GLUT_BITMAP_TIMES_ROMAN_24);
	sprintf_s(scoreText, "MISS : %d", miss);
	iText(SCREEN_WIDTH-100,SCREEN_HEIGHT-50,scoreText, GLUT_BITMAP_TIMES_ROMAN_24);
}


/*function iMouseMove() is called when the user presses and drags the mouse.
(mx, my) is the position where the mouse pointer is.
*/

void iMouseMove(int mx, int my)
{
	
}
//*******************************************************************ipassiveMouse***********************************************************************//
void iPassiveMouseMove(int mx, int my)
{
	
}

void iMouse(int button, int state, int mx, int my)
{
	
	if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
	{
		for(int i=0;i<NUMBER_OF_BALLOONS;i++){
			if(B[i].isHit(mx,my)){
				hit++;
			}
		}
		
	}
	
	
	if (button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN)
	{
		
	}
}

/*
function iKeyboard() is called whenever the user hits a key in keyboard.
key- holds the ASCII value of the key pressed.
*/


void iKeyboard(unsigned char key)
{
	if (key == '\r')
	{
		
	}
	
	
}

/*
function iSpecialKeyboard() is called whenver user hits special keys like-
function keys, home, end, pg up, pg down, arraows etc. you have to use
appropriate constants to detect them. A list is:
GLUT_KEY_F1, GLUT_KEY_F2, GLUT_KEY_F3, GLUT_KEY_F4, GLUT_KEY_F5, GLUT_KEY_F6,
GLUT_KEY_F7, GLUT_KEY_F8, GLUT_KEY_F9, GLUT_KEY_F10, GLUT_KEY_F11, GLUT_KEY_F12,
GLUT_KEY_LEFT, GLUT_KEY_UP, GLUT_KEY_RIGHT, GLUT_KEY_DOWN, GLUT_KEY_PAGE UP,
GLUT_KEY_PAGE DOWN, GLUT_KEY_HOME, GLUT_KEY_END, GLUT_KEY_INSERT
*/
void iSpecialKeyboard(unsigned char key)
{

	
	if (key == GLUT_KEY_RIGHT)
	{
				
	}
	if (key == GLUT_KEY_LEFT)
	{
		
	}
	
	if (key == GLUT_KEY_HOME)
	{
		
	}
}

void moveUp(){
	for(int i=0;i<NUMBER_OF_BALLOONS;i++){
		if(B[i].isOutOfBound()){
			miss++;
		}
	}
}



void initializeBalloon(){
	for(int i=0;i<NUMBER_OF_BALLOONS;i++){
		B[i].resetBalloon();
		char text[100];
		sprintf_s(text, "Images\\balloon%d.png", i%5 + 1);
		//printf("%s\n",text);
		B[i].image = iLoadImage(text);
	}
}

int main()
{	
	iSetTimer(30,moveUp);
	srand((unsigned)time(NULL));
	iInitialize(SCREEN_WIDTH, SCREEN_HEIGHT, "Project Title");
	initializeBalloon();
	///updated see the documentations
	iStart();
	return 0;
}
